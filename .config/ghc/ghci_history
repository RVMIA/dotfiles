main
:r
map head $ group ans
group ans
ans
main
main
main
main
main
:r
:l
main
main
nub [a | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
import Data.List
nub [a | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[a | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[1 | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[[a,b,c,d,e,f,g,h] | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[[a,b,c,d,e,f,g,h] | a <- reverse [0..200], b <- reverse [0..100], c <- reverse [0..40], d <- reverse[0..20], e <- reverse [0..10], f <- reverse [0..4], g <- reverse [0..2], h <- reverse[0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[[a,b,c,d,e,f,g,h] | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[filter ((/=) 0) [a,b,c,d,e,f,g,h] | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[[a,b,c,d,e,f,g,h] | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[[a,b,c,d,e,f,g,h] | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[(a,b,c,d,e,f,g,h) | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
[(a,b,c,d,e,f,g,h) | a <- [0..5], b <- [0..5], c <- [0..5], d <- [0..5], e <- [0..5], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
length [(a,b,c,d,e,f,g,h) | a <- [0..5], b <- [0..5], c <- [0..5], d <- [0..5], e <- [0..5], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
length [(a,b,c,d,e,f,g,h) | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a + (2 * b) + (5 * c) + (10 * d) + (20 * e) + (50 * f) + (100 * g) + (200 * h) == 200]
length [(a,b,c,d,e,f,g,h) | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a+b+c+d+e+f+g+h == 200]
length [(a,b,c,d,e,f,g,h) | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1], a+b+c+d+e+f+g+h = 200]
length [(a,b,c,d,e,f,g,h) | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1]]
[(a,b,c,d,e,f,g,h) | a <- [0..200], b <- [0..100], c <- [0..40], d <- [0..20], e <- [0..10], f <- [0..4], g <- [0..2], h <- [0..1]]
import Data.F
:doc KeySym
:kind KeySym
:kind KeySyn
:info KeySym
:t KeySym
doc shorten
:doc const
const
doc wrap
wrap
